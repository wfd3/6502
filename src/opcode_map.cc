//
// Opcode to implementation map.
//
// Copyright (C) 2023 Walt Drummond
//
// This program is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation, either version 3 of the License, or (at your option)
// any later version.
//
// This program is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
// more details.
//
// You should have received a copy of the GNU General Public License along with
// this program.  If not, see <http://www.gnu.org/licenses/>.

#include "./6502.h"

// The instructions.  Flags field provides information about any special
// handling the current instruction requires.  For the 6502, the flags
// are:
//  - CYCLE_BRANCH: Add a cycle if conditional branch is taken (all
//                  conditional branches).
//  - CYCLE__PAGE : Add two cycles if an instruction causes a read from
//                  an address on an adjacent page, specifically indexed
//                  addressing modes.
//
// See http://www.6502.org/users/obelisk/6502/addressing.html for more
// information.

std::map<Byte, CPU::instruction> CPU::setupInstructionMap() {
	return  {
		{ INS_BRK_IMP,
		  {"brk", ADDR_MODE_IMP, 1, 7, NONE, &CPU::ins_brk}},
		{ INS_ORA_IDX,
		  {"ora", ADDR_MODE_IDX, 2, 6, NONE, &CPU::ins_ora}},
		{ INS_ASL_ACC,
		  {"asl", ADDR_MODE_ACC, 1, 2, NONE, &CPU::ins_asl}},
		{ INS_ADC_ZP,
		  {"adc", ADDR_MODE_ZP, 2, 3, NONE, &CPU::ins_adc}},
		{ INS_ROR_ZP,
		  {"ror", ADDR_MODE_ZP, 2, 5, NONE, &CPU::ins_ror}},
		{ INS_PLA_IMP,
		  {"pla", ADDR_MODE_IMP, 1, 4, NONE, &CPU::ins_pla}},
		{ INS_ADC_IMM,
		  {"adc", ADDR_MODE_IMM, 2, 2, NONE, &CPU::ins_adc}},
		{ INS_ROR_ACC,
		  {"ror", ADDR_MODE_ACC, 1, 2, NONE, &CPU::ins_ror}},
		{ INS_JMP_IND,
		  {"jmp", ADDR_MODE_IND, 3, 5, NONE, &CPU::ins_jmp}},
		{ INS_ADC_ABS,
		  {"adc", ADDR_MODE_ABS, 3, 4, NONE, &CPU::ins_adc}},
		{ INS_ROR_ABS,
		  {"ror", ADDR_MODE_ABS, 3, 6, NONE, &CPU::ins_ror}},
		{ INS_BVS_REL,
		  {"bvs", ADDR_MODE_REL, 2, 2, CYCLE_BRANCH, &CPU::ins_bvs}},
		{ INS_ADC_IDY,
		  {"adc", ADDR_MODE_IDY, 2, 5, CYCLE_PAGE, &CPU::ins_adc}},
		{ INS_ADC_ZPX,
		  {"adc", ADDR_MODE_ZPX, 2, 4, NONE, &CPU::ins_adc}},
		{ INS_ROR_ZPX,
		  {"ror", ADDR_MODE_ZPX, 2, 6, NONE, &CPU::ins_ror}},
		{ INS_SEI_IMP,
		  {"sei", ADDR_MODE_IMP, 1, 2, NONE, &CPU::ins_sei}},
		{ INS_ADC_ABY,
		  {"adc", ADDR_MODE_ABY, 3, 4, CYCLE_PAGE, &CPU::ins_adc}},
		{ INS_ADC_ABX,
		  {"adc", ADDR_MODE_ABX, 3, 4, CYCLE_PAGE, &CPU::ins_adc}},
		{ INS_ROR_ABX,
		  {"ror", ADDR_MODE_ABX, 3, 7, NONE, &CPU::ins_ror}},
		{ INS_STA_IDX,
		  {"sta", ADDR_MODE_IDX, 2, 6, NONE, &CPU::ins_sta}},
		{ INS_ORA_ABS,
		  {"ora", ADDR_MODE_ABS, 3, 4, NONE, &CPU::ins_ora}},
		{ INS_STY_ZP,
		  {"sty", ADDR_MODE_ZP, 2, 3, NONE, &CPU::ins_sty}},
		{ INS_STA_ZP,
		  {"sta", ADDR_MODE_ZP, 2, 3, NONE, &CPU::ins_sta}},
		{ INS_STX_ZP,
		  {"stx", ADDR_MODE_ZP, 2, 3, NONE, &CPU::ins_stx}},
		{ INS_DEY_IMP,
		  {"dey", ADDR_MODE_IMP, 1, 2, NONE, &CPU::ins_dey}},
		{ INS_TXA_IMP,
		  {"txa", ADDR_MODE_IMP, 1, 2, NONE, &CPU::ins_txa}},
		{ INS_ASL_ABS,
		  {"asl", ADDR_MODE_ABS, 3, 6, NONE, &CPU::ins_asl}},
		{ INS_STY_ABS,
		  {"sty", ADDR_MODE_ABS, 3, 4, NONE, &CPU::ins_sty}},
		{ INS_STA_ABS,
		  {"sta", ADDR_MODE_ABS, 3, 4, NONE, &CPU::ins_sta}},
		{ INS_STX_ABS,
		  {"stx", ADDR_MODE_ABS, 3, 4, NONE, &CPU::ins_stx}},
		{ INS_BCC_REL,
		  {"bcc", ADDR_MODE_REL, 2, 2, CYCLE_BRANCH, &CPU::ins_bcc}},
		{ INS_STA_IDY,
		  {"sta", ADDR_MODE_IDY, 2, 6, NONE, &CPU::ins_sta}},
		{ INS_STY_ZPX,
		  {"sty", ADDR_MODE_ZPX, 2, 4, NONE, &CPU::ins_sty}},
		{ INS_STA_ZPX,
		  {"sta", ADDR_MODE_ZPX, 2, 4, NONE, &CPU::ins_sta}},
		{ INS_STX_ZPY,
		  {"stx", ADDR_MODE_ZPY, 2, 4, NONE, &CPU::ins_stx}},
		{ INS_TYA_IMP,
		  {"tya", ADDR_MODE_IMP, 1, 2, NONE, &CPU::ins_tya}},
		{ INS_STA_ABY,
		  {"sta", ADDR_MODE_ABY, 3, 5, NONE, &CPU::ins_sta}},
		{ INS_TXS_IMP,
		  {"txs", ADDR_MODE_IMP, 1, 2, NONE, &CPU::ins_txs}},
		{ INS_STA_ABX,
		  {"sta", ADDR_MODE_ABX, 3, 5, NONE, &CPU::ins_sta}},
		{ INS_BPL_REL,
		  {"bpl", ADDR_MODE_REL, 2, 2, CYCLE_BRANCH, &CPU::ins_bpl}},
		{ INS_LDY_IMM,
		  {"ldy", ADDR_MODE_IMM, 2, 2, NONE, &CPU::ins_ldy}},
		{ INS_LDA_IDX,
		  {"lda", ADDR_MODE_IDX, 2, 6, NONE, &CPU::ins_lda}},
		{ INS_LDX_IMM,
		  {"ldx", ADDR_MODE_IMM, 2, 2, NONE, &CPU::ins_ldx}},
		{ INS_LDY_ZP,
		  {"ldy", ADDR_MODE_ZP, 2, 3, NONE, &CPU::ins_ldy}},
		{ INS_LDA_ZP,
		  {"lda", ADDR_MODE_ZP, 2, 3, NONE, &CPU::ins_lda}},
		{ INS_LDX_ZP,
		  {"ldx", ADDR_MODE_ZP, 2, 3, NONE, &CPU::ins_ldx}},
		{ INS_TAY_IMP,
		  {"tay", ADDR_MODE_IMP, 1, 2, NONE, &CPU::ins_tay}},
		{ INS_LDA_IMM,
		  {"lda", ADDR_MODE_IMM, 2, 2, NONE, &CPU::ins_lda}},
		{ INS_ORA_IDY,
		  {"ora", ADDR_MODE_IDY, 2, 5, CYCLE_PAGE, &CPU::ins_ora}},
		{ INS_TAX_IMP,
		  {"tax", ADDR_MODE_IMP, 1, 2, NONE, &CPU::ins_tax}},
		{ INS_LDY_ABS,
		  {"ldy", ADDR_MODE_ABS, 3, 4, NONE, &CPU::ins_ldy}},
		{ INS_LDA_ABS,
		  {"lda", ADDR_MODE_ABS, 3, 4, NONE, &CPU::ins_lda}},
		{ INS_LDX_ABS,
		  {"ldx", ADDR_MODE_ABS, 3, 4, NONE, &CPU::ins_ldx}},
		{ INS_BCS_REL,
		  {"bcs", ADDR_MODE_REL, 2, 2, CYCLE_BRANCH, &CPU::ins_bcs}},
		{ INS_LDA_IDY,
		  {"lda", ADDR_MODE_IDY, 2, 5, CYCLE_PAGE, &CPU::ins_lda}},
		{ INS_LDY_ZPX,
		  {"ldy", ADDR_MODE_ZPX, 2, 4, NONE, &CPU::ins_ldy}},
		{ INS_LDA_ZPX,
		  {"lda", ADDR_MODE_ZPX, 2, 4, NONE, &CPU::ins_lda}},
		{ INS_LDX_ZPY,
		  {"ldx", ADDR_MODE_ZPY, 2, 4, NONE, &CPU::ins_ldx}},
		{ INS_CLV_IMP,
		  {"clv", ADDR_MODE_IMP, 1, 2, NONE, &CPU::ins_clv}},
		{ INS_LDA_ABY,
		  {"lda", ADDR_MODE_ABY, 3, 4, CYCLE_PAGE, &CPU::ins_lda}},
		{ INS_TSX_IMP,
		  {"tsx", ADDR_MODE_IMP, 1, 2, NONE, &CPU::ins_tsx}},
		{ INS_LDY_ABX,
		  {"ldy", ADDR_MODE_ABX, 3, 4, CYCLE_PAGE, &CPU::ins_ldy}},
		{ INS_LDA_ABX,
		  {"lda", ADDR_MODE_ABX, 3, 4, CYCLE_PAGE, &CPU::ins_lda}},
		{ INS_LDX_ABY,
		  {"ldx", ADDR_MODE_ABY, 3, 4, CYCLE_PAGE, &CPU::ins_ldx}},
		{ INS_CPY_IMM,
		  {"cpy", ADDR_MODE_IMM, 2, 2, NONE, &CPU::ins_cpy}},
		{ INS_CMP_IDX,
		  {"cmp", ADDR_MODE_IDX, 2, 6, NONE, &CPU::ins_cmp}},
		{ INS_CPY_ZP,
		  {"cpy", ADDR_MODE_ZP, 2, 3, NONE, &CPU::ins_cpy}},
		{ INS_CMP_ZP,
		  {"cmp", ADDR_MODE_ZP, 2, 3, NONE, &CPU::ins_cmp}},
		{ INS_DEC_ZP,
		  {"dec", ADDR_MODE_ZP, 2, 5, NONE, &CPU::ins_dec}},
		{ INS_INY_IMP,
		  {"iny", ADDR_MODE_IMP, 1, 2, NONE, &CPU::ins_iny}},
		{ INS_CMP_IMM,
		  {"cmp", ADDR_MODE_IMM, 2, 2, NONE, &CPU::ins_cmp}},
		{ INS_DEX_IMP,
		  {"dex", ADDR_MODE_IMP, 1, 2, NONE, &CPU::ins_dex}},
		{ INS_CPY_ABS,
		  {"cpy", ADDR_MODE_ABS, 3, 4, NONE, &CPU::ins_cpy}},
		{ INS_CMP_ABS,
		  {"cmp", ADDR_MODE_ABS, 3, 4, NONE, &CPU::ins_cmp}},
		{ INS_DEC_ABS,
		  {"dec", ADDR_MODE_ABS, 3, 6, NONE, &CPU::ins_dec}},
		{ INS_BNE_REL,
		  {"bne", ADDR_MODE_REL, 2, 2, CYCLE_BRANCH, &CPU::ins_bne}},
		{ INS_CMP_IDY,
		  {"cmp", ADDR_MODE_IDY, 2, 5, CYCLE_PAGE, &CPU::ins_cmp}},
		{ INS_ORA_ZPX,
		  {"ora", ADDR_MODE_ZPX, 2, 4, NONE, &CPU::ins_ora}},
		{ INS_CMP_ZPX,
		  {"cmp", ADDR_MODE_ZPX, 2, 4, NONE, &CPU::ins_cmp}},
		{ INS_DEC_ZPX,
		  {"dec", ADDR_MODE_ZPX, 2, 6, NONE, &CPU::ins_dec}},
		{ INS_CLD_IMP,
		  {"cld", ADDR_MODE_IMP, 1, 2, NONE, &CPU::ins_cld}},
		{ INS_CMP_ABY,
		  {"cmp", ADDR_MODE_ABY, 3, 4, CYCLE_PAGE, &CPU::ins_cmp}},
		{ INS_ASL_ZPX,
		  {"asl", ADDR_MODE_ZPX, 2, 6, NONE, &CPU::ins_asl}},
		{ INS_CMP_ABX,
		  {"cmp", ADDR_MODE_ABX, 3, 4, CYCLE_PAGE, &CPU::ins_cmp}},
		{ INS_DEC_ABX,
		  {"dec", ADDR_MODE_ABX, 3, 7, NONE, &CPU::ins_dec}},
		{ INS_CPX_IMM,
		  {"cpx", ADDR_MODE_IMM, 2, 2, NONE, &CPU::ins_cpx}},
		{ INS_SBC_IDX,
		  {"sbc", ADDR_MODE_IDX, 2, 6, NONE, &CPU::ins_sbc}},
		{ INS_CPX_ZP,
		  {"cpx", ADDR_MODE_ZP, 2, 3, NONE, &CPU::ins_cpx}},
		{ INS_SBC_ZP,
		  {"sbc", ADDR_MODE_ZP, 2, 3, NONE, &CPU::ins_sbc}},
		{ INS_INC_ZP,
		  {"inc", ADDR_MODE_ZP, 2, 5, NONE, &CPU::ins_inc}},
		{ INS_INX_IMP,
		  {"inx", ADDR_MODE_IMP, 1, 2, NONE, &CPU::ins_inx}},
		{ INS_SBC_IMM,
		  {"sbc", ADDR_MODE_IMM, 2, 2, NONE, &CPU::ins_sbc}},
		{ INS_NOP_IMP,
		  {"nop", ADDR_MODE_IMP, 1, 2, NONE, &CPU::ins_nop}},
		{ INS_CPX_ABS,
		  {"cpx", ADDR_MODE_ABS, 3, 4, NONE, &CPU::ins_cpx}},
		{ INS_SBC_ABS,
		  {"sbc", ADDR_MODE_ABS, 3, 4, NONE, &CPU::ins_sbc}},
		{ INS_INC_ABS,
		  {"inc", ADDR_MODE_ABS, 3, 6, NONE, &CPU::ins_inc}},
		{ INS_CLC_IMP,
		  {"clc", ADDR_MODE_IMP, 1, 2, NONE, &CPU::ins_clc}},
		{ INS_BEQ_REL,
		  {"beq", ADDR_MODE_REL, 2, 2, CYCLE_BRANCH, &CPU::ins_beq}},
		{ INS_SBC_IDY,
		  {"sbc", ADDR_MODE_IDY, 2, 5, CYCLE_PAGE, &CPU::ins_sbc}},
		{ INS_SBC_ZPX,
		  {"sbc", ADDR_MODE_ZPX, 2, 4, NONE, &CPU::ins_sbc}},
		{ INS_INC_ZPX,
		  {"inc", ADDR_MODE_ZPX, 2, 6, NONE, &CPU::ins_inc}},
		{ INS_SED_IMP,
		  {"sed", ADDR_MODE_IMP, 1, 2, NONE, &CPU::ins_sed}},
		{ INS_SBC_ABY,
		  {"sbc", ADDR_MODE_ABY, 3, 4, CYCLE_PAGE, &CPU::ins_sbc}},
		{ INS_ORA_ABY,
		  {"ora", ADDR_MODE_ABY, 3, 4, CYCLE_PAGE, &CPU::ins_ora}},
		{ INS_SBC_ABX,
		  {"sbc", ADDR_MODE_ABX, 3, 4, CYCLE_PAGE, &CPU::ins_sbc}},
		{ INS_INC_ABX,
		  {"inc", ADDR_MODE_ABX, 3, 7, NONE, &CPU::ins_inc}},
		{ INS_ORA_ABX,
		  {"ora", ADDR_MODE_ABX, 3, 4, CYCLE_PAGE, &CPU::ins_ora}},
		{ INS_ASL_ABX,
		  {"asl", ADDR_MODE_ABX, 3, 7, NONE, &CPU::ins_asl}},
		{ INS_JSR_ABS,
		  {"jsr", ADDR_MODE_ABS, 3, 6, NONE, &CPU::ins_jsr}},
		{ INS_AND_IDX,
		  {"and", ADDR_MODE_IDX, 2, 6, NONE, &CPU::ins_and}},
		{ INS_BIT_ZP,
		  {"bit", ADDR_MODE_ZP, 2, 3, NONE, &CPU::ins_bit}},
		{ INS_AND_ZP,
		  {"and", ADDR_MODE_ZP, 2, 3, NONE, &CPU::ins_and}},
		{ INS_ROL_ZP,
		  {"rol", ADDR_MODE_ZP, 2, 5, NONE, &CPU::ins_rol}},
		{ INS_PLP_IMP,
		  {"plp", ADDR_MODE_IMP, 1, 4, NONE, &CPU::ins_plp}},
		{ INS_AND_IMM,
		  {"and", ADDR_MODE_IMM, 2, 2, NONE, &CPU::ins_and}},
		{ INS_ROL_ACC,
		  {"rol", ADDR_MODE_ACC, 1, 2, NONE, &CPU::ins_rol}},
		{ INS_BIT_ABS,
		  {"bit", ADDR_MODE_ABS, 3, 4, NONE, &CPU::ins_bit}},
		{ INS_AND_ABS,
		  {"and", ADDR_MODE_ABS, 3, 4, NONE, &CPU::ins_and}},
		{ INS_ROL_ABS,
		  {"rol", ADDR_MODE_ABS, 3, 6, NONE, &CPU::ins_rol}},
		{ INS_BMI_REL,
		  {"bmi", ADDR_MODE_REL, 2, 2, CYCLE_BRANCH, &CPU::ins_bmi}},
		{ INS_AND_IDY,
		  {"and", ADDR_MODE_IDY, 2, 5, CYCLE_PAGE, &CPU::ins_and}},
		{ INS_ORA_ZP, {"ora", ADDR_MODE_ZP, 2, 3, NONE, &CPU::ins_ora}},
		{ INS_AND_ZPX,
		  {"and", ADDR_MODE_ZPX, 2, 4, NONE, &CPU::ins_and}},
		{ INS_ROL_ZPX,
		  {"rol", ADDR_MODE_ZPX, 2, 6, NONE, &CPU::ins_rol}},
		{ INS_SEC_IMP,
		  {"sec", ADDR_MODE_IMP, 1, 2, NONE, &CPU::ins_sec}},
		{ INS_AND_ABY,
		  {"and", ADDR_MODE_ABY, 3, 4, CYCLE_PAGE, &CPU::ins_and}},
		{ INS_ASL_ZP, {"asl", ADDR_MODE_ZP, 2, 5, NONE, &CPU::ins_asl}},
		{ INS_AND_ABX,
		  {"and", ADDR_MODE_ABX, 3, 4, CYCLE_PAGE, &CPU::ins_and}},
		{ INS_ROL_ABX,
		  {"rol", ADDR_MODE_ABX, 3, 7, NONE, &CPU::ins_rol}},
		{ INS_RTI_IMP,
		  {"rti", ADDR_MODE_IMP, 1, 6, NONE, &CPU::ins_rti}},
		{ INS_EOR_IDX,
		  {"eor", ADDR_MODE_IDX, 2, 6, NONE, &CPU::ins_eor}},
		{ INS_EOR_ZP,
		  {"eor", ADDR_MODE_ZP, 2, 3, NONE, &CPU::ins_eor}},
		{ INS_LSR_ZP,
		  {"lsr", ADDR_MODE_ZP, 2, 5, NONE, &CPU::ins_lsr}},
		{ INS_PHA_IMP,
		  {"pha", ADDR_MODE_IMP, 1, 3, NONE, &CPU::ins_pha}},
		{ INS_EOR_IMM,
		  {"eor", ADDR_MODE_IMM, 2, 2, NONE, &CPU::ins_eor}},
		{ INS_LSR_ACC,
		  {"lsr", ADDR_MODE_ACC, 1, 2, NONE, &CPU::ins_lsr}},
		{ INS_JMP_ABS,
		  {"jmp", ADDR_MODE_ABS, 3, 3, NONE, &CPU::ins_jmp}},
		{ INS_EOR_ABS,
		  {"eor", ADDR_MODE_ABS, 3, 4, NONE, &CPU::ins_eor}},
		{ INS_LSR_ABS,
		  {"lsr", ADDR_MODE_ABS, 3, 6, NONE, &CPU::ins_lsr}},
		{ INS_PHP_IMP,
		  {"php", ADDR_MODE_IMP, 1, 3, NONE, &CPU::ins_php}},
		{ INS_BVC_REL,
		  {"bvc", ADDR_MODE_REL, 2, 2, CYCLE_BRANCH, &CPU::ins_bvc}},
		{ INS_EOR_IDY,
		  {"eor", ADDR_MODE_IDY, 2, 5, CYCLE_PAGE, &CPU::ins_eor}},
		{ INS_EOR_ZPX,
		  {"eor", ADDR_MODE_ZPX, 2, 4, NONE, &CPU::ins_eor}},
		{ INS_LSR_ZPX,
		  {"lsr", ADDR_MODE_ZPX, 2, 6, NONE, &CPU::ins_lsr}},
		{ INS_CLI_IMP,
		  {"cli", ADDR_MODE_IMP, 1, 2, NONE, &CPU::ins_cli}},
		{ INS_EOR_ABY,
		  {"eor", ADDR_MODE_ABY, 3, 4, CYCLE_PAGE, &CPU::ins_eor}},
		{ INS_ORA_IMM,
		  {"ora", ADDR_MODE_IMM, 2, 2, NONE, &CPU::ins_ora}},
		{ INS_EOR_ABX,
		  {"eor", ADDR_MODE_ABX, 3, 4, CYCLE_PAGE, &CPU::ins_eor}},
		{ INS_LSR_ABX,
		  {"lsr", ADDR_MODE_ABX, 3, 7, NONE, &CPU::ins_lsr}},
		{ INS_RTS_IMP,
		  {"rts", ADDR_MODE_IMP, 1, 6, NONE, &CPU::ins_rts}},
		{ INS_ADC_IDX,
		  {"adc", ADDR_MODE_IDX, 2, 6, NONE, &CPU::ins_adc}},
	};
}
